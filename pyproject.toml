[project]
name = "bsc-thesis-mcts-rl-isabelle"
version = "1.0.0"
description = "Improving Reasoning Capabilities of Large Language Models using the Automated Theorem Prover Isabelle"
readme = "README.md"
requires-python = "==3.12.*"
dependencies = [
  "torch>=2.8",
  "hf-xet>=1.1.1",
  "isabelle-client>=0.5.5",
  "openai>=1.82.0",
  "matplotlib>=3.5.0",
  "pandas>=2.0.0",
  "anthropic>=0.7.0",
  "python-dotenv>=1.0.0",
  "tqdm>=4.65.0",
  "typing-extensions>=4.5.0",
  "ipython>=8.37.0",
  "matplotlib-backend-kitty>=2.1.2",
  "streamlit>=1.45.1",
  "mirascope[openai]==1.25.2",
  "plotly>=6.2.0",
  "pyvis>=0.3.2",
  "textual>=3.5.0",
  "wandb>=0.16.0",
  "lilypad-sdk[openai]>=0.10.1",
  "numpy>=2.2.5",
  "pydantic>=2.11.5",
  "peft",
  "vllm",
  "flash-attn",
  "transformers>=4.56.1",
  "tokenizers>=0.22.0",
  "datasets>=4.0.0",
  "accelerate>=1.10.1",
  "hydra-core>=1.3.2",
  "pyarrow>=20.0.0",
  "bitsandbytes",
  "docker>=7.1.0",
  "ray>=2.48.0",
  "langchain-core>=0.3.76",
  "fastapi>=0.116.2",
  "uvicorn>=0.35.0",
  "defusedxml>=0.7.1",
  "pytest-asyncio>=1.2.0",
  "omegaconf",
  "pytest>=8.4.2",
  "qisabelle",
  "numba>=0.61.2",
  "psutil>=7.0.0",
  "mpi4py>=4.1.0",
]


[tool.uv.sources]
# let flash-attn be built
flash-attn = { git = "https://github.com/Dao-AILab/flash-attention.git", tag = "v2.8.3" }
qisabelle = { workspace = true }

[tool.uv.workspace]
members = ["qisabelle"]

[project.optional-dependencies]
dev = [
  "ruff>=0.8.0",
  "mypy>=1.13.0",
  "pytest>=8.3.0",
  "pytest-cov>=6.0.0",
  "pytest-watch>=4.2.0",
  "pre-commit>=4.0.0",
]


[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.uv]
dev-dependencies = [
  "ruff>=0.8.0",
  "mypy>=1.13.0",
  "pytest>=8.3.0",
  "pytest-cov>=6.0.0",
  "pytest-watch>=4.2.0",
  "pre-commit>=4.0.0",
]
preview = true

# bulid from sources
override-dependencies = [
  "flash-attn @ git+https://github.com/Dao-AILab/flash-attention.git@v2.8.3",
]
extra-build-dependencies.flash-attn = ["torch"]


[tool.setuptools.packages.find]
where = ["."]
include = ["beamsearch*", "mcts*", "qisabelle*"]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "UP",  # pyupgrade
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "SIM", # flake8-simplify
  "RUF", # ruff-specific rules
]
ignore = [
  "E501",   # line too long (handled by formatter)
  "B008",   # do not perform function calls in argument defaults
  "B904",   # raise without from inside except
  "SIM108", # use ternary operator instead of if-else
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # unused imports in __init__ files

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "-v --tb=short"

[tool.coverage.run]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
]

[dependency-groups]
dev = ["black>=25.1.0", "mypy>=1.16.1", "pytest>=8.4.1", "ruff>=0.12.1"]
